/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.ufrn.grafos.view;

import br.ufrn.grafos.entity.Edge;
import br.ufrn.grafos.service.LabyrinthGeneratorService;
import static java.awt.Color.*;
import java.awt.Graphics;
import static java.awt.SystemColor.window;
import java.util.List;
import javax.swing.JComponent;
import javax.swing.JFrame;

/**
 *
 * @author GilbertoSoares
 */

class DrawRect {
//    public static void main(String[] a) {
//      JFrame window = new JFrame();
//      window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
//      window.setBounds(30, 30, 300, 300);
//      window.getContentPane().add(new MyCanvas());
//      window.setVisible(true);
//    }
}

public class MyCanvas extends javax.swing.JPanel {

    /**
     * Creates new form MyCanvas
     */
    public int x;
    public int y;
    public LabyrinthGeneratorService labyrinthGeneratorService;
    
    public MyCanvas() {
        initComponents();
    }
    
    public MyCanvas(int x, int y, LabyrinthGeneratorService lab) {
        this.x = x;
        this.y = y;
        labyrinthGeneratorService = lab;
        initComponents();
    }
    
    public int getPx(int x, int y){
        int px;
        
        if(y > x){
            x = y;
        }
        if(x <= 25)
            return 20;
        else
            return 15;
    }

    public void paint(Graphics g) {
        
        //dimensao de cada celula do labirinto
        int px = getPx(x,y);
        int px2 = px/2;
        
        
        //desenhar fundo do retangulo
        g.setColor(white);
        g.fillRect (px2, px2, x*px, y*px);
      
        //desenhar contorno retangulo
        g.setColor(black);
        g.drawRect (px2, px2, x*px, y*px);
        
        //desenhar linhas
        for (int i = 1; i < y; i++) {
            g.drawLine (px2, px2 + (px * i), (x*px) + px2, px2 + (px * i));
        }
        
        //desenhar colunas
        for (int j = 1; j < x; j++) {
            g.drawLine (px2 + (px * j), px2, px2 + (px * j), (y*px) + px2);
        }
        
        //apagar as paredes
        g.setColor(white);
        
        List<Edge> edges = labyrinthGeneratorService.caminhoFinal().getEdges();
        int linhaOrigem;
        int colunaOrigem;
        int linhaDestino;
        int colunaDestino;
        int distanciaLinha;
        int distanciaColuna;
            
        for(Edge edge: edges){
            linhaOrigem = edge.getOrigin().getPosition().getRow();
            colunaOrigem = edge.getOrigin().getPosition().getColumn();
            linhaDestino = edge.getDestiny().getPosition().getRow();
            colunaDestino = edge.getDestiny().getPosition().getColumn();
            
            if(linhaOrigem == linhaDestino){
                g.drawLine(px2 + px + (px * colunaOrigem), px2 + 1 + (px * linhaOrigem), px2 + px + (px * colunaOrigem), px2 + px - 1 + (px * linhaOrigem));
            }
            
            if(colunaOrigem == colunaDestino){
                g.drawLine(px2 + 1 + (px * colunaOrigem), px2 + px + (px * linhaOrigem), px2 + px -1 + (px * colunaOrigem), px2 + px + (px * linhaOrigem));
            }
        }
      
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
